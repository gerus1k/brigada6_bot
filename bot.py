import telebot
import googletrans

from telebot import types
from googletrans import Translator

bot = telebot.TeleBot('6022109518:AAHgixLTjERH8Caogmg_lsz1v2y5D38iNIg')
translator = Translator()

# –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup()
    russian_button = types.InlineKeyboardButton('üá∑üá∫–†—É—Å—Å–∫–∏–π', callback_data='ru')
    english_button = types.InlineKeyboardButton('üá¨üáßEnglish', callback_data='en')
    markup.add(russian_button, english_button)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language:', reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞
@bot.callback_query_handler(func=lambda call: call.data == 'translator')
def translator_callback(call):
    bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞:')

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ (–ù–ï –†–ê–ë–û–¢–ê–ï–¢)) )
@bot.message_handler(func=lambda message: True)
def translate_text(message):
    text = message.text
    try:
        detected_lang = translator.detect(text).lang
        if detected_lang == 'ru':
            translation = translator.translate(text, dest='en')
            bot.send_message(message.chat.id, f'–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π: {translation.text}')
        else:
            translation = translator.translate(text, dest='ru')
            bot.send_message(message.chat.id, f'–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π: {translation.text}')
    except AttributeError:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —è–∑—ã–∫ —Ç–µ–∫—Å—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    except Exception as e:
        bot.send_message(message.chat.id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}')

# –í—ã–≤–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
@bot.callback_query_handler(func=lambda call: True)
def button(call):
    language = call.data

    if language == 'ru':
        markup = types.InlineKeyboardMarkup(row_width=2)
        translator_button = types.InlineKeyboardButton('üåê –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫', callback_data='translator')
        calculator_button = types.InlineKeyboardButton('üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', callback_data='calculator')
        weather_button = types.InlineKeyboardButton('üå°Ô∏è –ü–æ–≥–æ–¥–∞', callback_data='weather')
        meme_button = types.InlineKeyboardButton('üóø IT –º–µ–º –¥–Ω—è', callback_data='meme')
        lang_select_button = types.InlineKeyboardButton('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —è–∑—ã–∫–∞', callback_data='lang_select')
        markup.add(translator_button, calculator_button, weather_button, meme_button, lang_select_button)

        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é:', reply_markup=markup)
    elif language == 'en':
        markup = types.InlineKeyboardMarkup(row_width=2)
        translator_button = types.InlineKeyboardButton('üåê Translator', callback_data='translator')
        calculator_button = types.InlineKeyboardButton('üßÆ Calculator', callback_data='calculator')
        weather_button = types.InlineKeyboardButton('üå°Ô∏è Weather', callback_data='weather')
        meme_button = types.InlineKeyboardButton('üóø IT-meme of the day', callback_data='meme')
        lang_select_button = types.InlineKeyboardButton('üîô Get back to language select', callback_data='lang_select')
        markup.add(translator_button, calculator_button, weather_button, meme_button, lang_select_button)

        bot.send_message(call.message.chat.id, 'Select function:', reply_markup=markup)

    bot.answer_callback_query(call.id)

bot.polling(none_stop=True, interval=0)